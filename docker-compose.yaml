version: '3'
networks:
  litdigNetwork:
    driver: bridge
services:
  app1:
    build:
      context: /Users/apple/neo4j/carleton-fastapi
    ports:
      - "8000:8000"
    container_name: carleton-fastapi
    networks:
      - litdigNetwork
  app2:
    build:
      context: /Users/apple/neo4j/graphistry-fastapi
    ports:
      - "8001:8001"
    container_name: graphistry-fastapi
    networks:
      - litdigNetwork
  neo4j:
    image: neo4j:5.3.0-enterprise
    restart: always
    ports:
          - "7474:7474"
          - "7687:7687"
    environment:
          NEO4J_AUTH: neo4j/Admin@123
          NEO4J_apoc_export_file_enabled: "true"
          NEO4J_apoc_import_file_enabled: "true"
          NEO4J_apoc_import_file_use__neo4j__config: "true"
          NEO4JLABS_PLUGINS: "[\"apoc\"]"
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    volumes:
          - /Users/apple/neo4j/neo4j_docker/data:/data
          - /Users/apple/neo4j/neo4j_docker/logs:/logs
          - /Users/apple/neo4j/neo4j_docker/conf:/conf
    container_name: neo4j_carlton
    networks:
      - litdigNetwork

  keycloak:
    image: sleighzy/keycloak
    container_name: keycloak
    ports:
      - 8080:8080
    environment:
      # - KEYCLOAK_IMPORT=/tmp/realm-test.json
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - ./:/temp
    networks:
      - litdigNetwork
    depends_on:
      - postgres
      
  postgres:
    image: postgres:13.0-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - litdigNetwork
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./infra/postgres:/docker-entrypoint-initdb.d
      - ./infra/postgres/postgresql.conf:/usr/local/pgsql/data/postgresql.conf

  react-app:
    build:
      context: /Users/apple/neo4j/graphistryReact
    ports:
      - "3000:3000"
    container_name: react-app
    networks:
      - litdigNetwork
  nginx:
    image: nginx
    ports:
      - "80:80"
    networks:
      - litdigNetwork
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/etc/nginx/html/
    depends_on:
      - app1
      - app2
      - react-app
volumes:
  postgres:
  nginx:
